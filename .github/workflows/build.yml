name: "[Build] Create binary and app"

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

defaults:
  run:
    shell: bash

jobs:
  branch_name:
    name: Get branch name
    uses: ministryofjustice/opg-github-workflows/.github/workflows/data-parse-branch-name.yml@main
    secrets: inherit
  semvar_tag:
    needs: [branch_name]
    name: "Get tag for (${{ needs.branch_name.outputs.parsed }})"
    uses: ministryofjustice/opg-github-workflows/.github/workflows/data-parse-semvar-tag.yml@main
    with:
      branch_name: ${{ needs.branch_name.outputs.parsed }}
    secrets: inherit

  build_from_makefile:
    needs: [branch_name, semvar_tag]
    name: "Building"
    runs-on: macos-latest
    strategy:
      matrix:
        target_architecture: ["darwin_arm64", "darwin_amd64"]
    steps:
    - name: Output branch / semvar 
      run: |
        echo "== BRANCH =="
        echo "Raw: ${{ needs.branch_name.outputs.raw }}"
        echo "Parsed: ${{ needs.branch_name.outputs.parsed }}"
        echo "Alphanumeric: ${{ needs.branch_name.outputs.alphanumeric }}"
        echo "== SEMVAR =="
        echo "Tag: ${{ needs.semvar_tag.outputs.tag }}"
        echo "New Tag: ${{ needs.semvar_tag.outputs.new_tag }}"
    - uses: actions/setup-go@v3
      with:
        go-version: '1.19'
    - name: Setup $GOBIN and $PATH
      run: |
        export GOBIN="${HOME}/go/bin"
        mkdir -p ${GOBIN}
        echo "GOBIN=${GOBIN}" >> $GITHUB_ENV
        echo "PATH=${PATH}:${GOBIN}" >> $GITHUB_ENV
    - run: go version
    - run: go env
    - run: echo "gobin ${GOBIN}"
    - run: echo "bash $(which bash)"
    - run: go install fyne.io/fyne/v2/cmd/fyne@v2.3.0
    - run: fyne version
    - name: Checkout Repo
      uses: actions/checkout@v3
    - run: make ${{ matrix.target_architecture }}
    - run: ls -larth ./builds/${{ matrix.target_architecture }}/**/Contents/MacOS
    - name: Upload application artifacts
      uses: actions/upload-artifact@v3
      with:
        name: OPGAWSKeyRotation_${{ matrix.target_architecture }}.app
        path: ./builds/${{ matrix.target_architecture }}/OPGAWSKeyRotation.app
    - name: Create release for ${{ matrix.target_architecture }}
      if: ${{ needs.branch_name.outputs.parsed == 'main' }}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.semvar_tag.outputs.tag }}
        release_name: ${{ steps.semvar_tag.outputs.tag }}
        draft: false
        prerelease: false
    - name: Create pre-release for ${{ matrix.target_architecture }}
      if: ${{ needs.branch_name.outputs.parsed != 'main' }}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.semvar_tag.outputs.tag }}
        release_name: ${{ steps.semvar_tag.outputs.tag }}
        draft: false
        prerelease: true


        

      
